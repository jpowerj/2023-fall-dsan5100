# 1. a
1-pbinom(64,560,0.12)
#FALSE
1-pbinom(65,560,0.12)
#b.
pbinom(65,560,0.35)
#FALSE
1-pbinom(64,560,0.35)
#FALSE
1-pbinom(65,560,0.35)
#FALSE
pbinom(65,560,0.12)
?pnorm
sd=sqrt(560*0,.35(1-0.35) #sqrt np(1-p)
sd=sqrt(560*0.35(1-0.35)) #sqrt np(1-p)
#c.
np=560*0.35
sd=sqrt(560*0.35(1-0.35)) #sqrt np(1-p)
sd=sqrt(560*0.35*(1-0.35)) #sqrt np(1-p)
pnorm(65,np,sd)
#4.
a. 1-phyper(15,268,132,43)
#4.
#a.
1-phyper(15,268,132,43)
phyper(15,268,132,43)
#4.
#a.
1-phyper(15,268,132,56)
#4.
#a.
1-phyper(10,268,132,56)
#4.
#a.
1-phyper(10,268,132,35)
#4.
#a.
1-phyper(10,268,132,20)
#4.
#a.
1-phyper(10,268,132,50)
#4.
#a.
1-phyper(10,268,132,20)
400-132
#4.
#a.
1-phyper(10,268,132,30)
#4.
#a.
1-phyper(15,268,132,20)
#4.
#a.
1-phyper(10,268,132,20)
#b.
1-phyper(10,132,268,20)
#FALSE
phyper(10,132,268,20)
#c.
p=132/400
dbinom(15,20,p)
#FALSE
1-dbinom(15,20,p)
#c
dhyper(15,132,268,20)
#c
dhyper(15,132,268,40)
dbinom(15,40,p)
#FALSE
1-dbinom(15,40,p)
#c
dhyper(15,132,268,40)
x <- runif(1000, 0.3,1)# make a sample from U(0,1)
plot.ecdf(x)
x <- runif(1000, 0.4,1)# make a sample from U(0,1)
x <- runif(1000, 0.4,1)# make a sample from U(0,1)
plot.ecdf(x)
df <- data.frame(height = runif(1000, 0.4,1))
ggplot(df, aes(height)) + stat_ecdf(geom = "point")
library(ggplot2)
ggplot(df, aes(height)) + stat_ecdf(geom = "point")
# keep only observations >= 0.5
plot.ecdf(x)
y<-rnorm(200, mean=60, sd=15)
plot.ecdf(x)
plot.ecdf(y)
y<-rnorm(200, mean=5, sd=.15)
plot.ecdf(y)
y<-rnorm(1000, mean=5, sd=.15)
plot.ecdf(y)
?plot.ecdf
# keep only observations >= 0.5
plot.ecdf(x, ylab="F(x)",xlab="variable X")
?plot.ecdf
# keep only observations >= 0.5
plot.ecdf(x, ylab="F(x)",xlab="variable X", main="CDF of X")
y<-rnorm(1000, mean=5, sd=.15)
plot.ecdf(y, ylab="F(Y)",xlab="variable Y", main="CDF of Y")
plot(e.cdf(y), pnorm(0:10,n,p), lwd = 3)
plot(ecdf(y), pnorm(0:10,n,p), lwd = 3)
plot(ecdf(y), pnorm(0:10,mean=5, sd=.15), lwd = 3)
ks.test(y,"pnorm",5,0.15)
plot(0:n,pbinom(0:n,n,p), type = 's')
n = 20
p = 0.4
(x<- rbinom(1,n,p)) #one binomial distributed random variate with (n,p)
(y<- rbinom(5,n,p)) #five binomial distributed random variate with (n,p)
n = 20
p = 0.4
(x<- rbinom(1,n,p)) #one binomial distributed random variate with (n,p)
(y<- rbinom(5,n,p)) #five binomial distributed random variate with (n,p)
plot(0:n,pbinom(0:n,n,p), type = 's')
pbinom(10,n,p)
pbinom(9,n,p)
pbinom(8,n,p)
#b.
1-pgeom(10,0.01)
1-pgeom(9,0.01)
#c.x = number of failures. size = target for number of successful trials, Must be strictly positive, need not be integer.
dnbinom(x = 6, size = 4, prob = 0.01)
#c.x = number of failures. size = target for number of successful trials, Must be strictly positive, need not be integer.
dnbinom(x = 6, size = 2, prob = 0.01)
#c.x = number of failures. size = target for number of successful trials, Must be strictly positive, need not be integer.
dnbinom(x = 3, size = 2, prob = 0.01)
#c.x = number of failures. size = target for number of successful trials, Must be strictly positive, need not be integer.
dnbinom(x = 9, size = 2, prob = 0.01)
#c.x = number of failures. size = target for number of successful trials, Must be strictly positive, need not be integer.
dnbinom(x = 6, size = 4, prob = 0.01)
#FALSE
dgeom(9,0.01)
#FALSE
dgeom(6,0.01)
#FALSE
dgeom(6,0.01)*4
#FALSE
dgeom(6,0.01)
#c.x = number of failures. size = target for number of successful trials, Must be strictly positive, need not be integer.
dnbinom(x = 96, size = 4, prob = 0.01)
#FALSE
dgeom(96,0.01)
#b.
1-pgeom(10,0.01)
#FALSE
1-pgeom(9,0.01)
pexp(2.5/60)
#2.
pexp(2,5*7/14)
#4.
x<-rnorm(1000,20,0.5)
?dnorm
dnorm(5,20,0.5)
dnorm(5,3,0.5)
dnorm(5,0.2,0.5)
dnorm(5,2,0.5)
dnorm(5,3,5)
dnorm(5,3,5)
sample(100,1:65)
?sample
x<-  sample(1:65,100)
x<-  sample(1:65,10)
x
mean(x)
sd(x)
var(x)
sqrt(471)
pnorm(60,43,sqrt(471))-pnorm(40,43,sqrt(471))
#9.
1-pexp(2.5, 1/24)
#2.
ppois(2,5*7/14)
pexp(30,2.5/60)
?pexp
#b.
1-pgeom(10,0.01)
#FALSE
1-pgeom(9,0.01)
#9.
1-pexp(2.5, 1/24)
